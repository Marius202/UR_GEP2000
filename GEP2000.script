ip_master = "10.0.0.5"

base_StatusWord = 2
base_Diagnosis = 3
base_ActualPosition = 4
base_ControlWord = 2049
base_DeviceMode_Workpiece = 2050
base_TeachPosition = 2051
base_GripForce_PositionTolerance = 2052

def init_gripper(port):
  i = 0
  iStep = 10
  while (iStep < 110) and (i < 20):
    if iStep == 10:
      if bit_of_word(modbus_get_signal_status("StatusWord", False), 6):
        modbus_set_output_register("ControlWord", 1, False)
        iStep = 20
      end
    end
    
    if iStep == 20:
      if bit_of_word(modbus_get_signal_status("StatusWord", False), 12):
        modbus_set_output_register("ControlWord", 0, False)
        iStep = 30
      end
    end

    if iStep == 30:
      if not bit_of_word(modbus_get_signal_status("StatusWord", False), 12):
        modbus_set_output_register("DeviceMode_Work", 25600, False)
        modbus_set_output_register("GripForce_Posit", 256, False)
        modbus_set_output_register("ControlWord", 1, False)
        iStep = 40
      end
    end

  
    if iStep == 40:
      if bit_of_word(modbus_get_signal_status("StatusWord", False), 12):
        modbus_set_output_register("ControlWord", 0, False)
        iStep = 50
      end
    end

    if iStep == 50:
      if bit_of_word(modbus_get_signal_status("StatusWord", False), 12):
        modbus_set_output_register("ControlWord", 512, False)
        iStep = 100
      end
    end

    if iStep == 100:
      popup("Initialisierung abgeschlossen")
      iStep = 110
    end
    
    i = i + 1
    sleep(1)
  end
end

def bit_of_word(word, bit_number):
  return floor(word / pow(2, bit_number)) % 2 != 0
end


init_gripper(1)